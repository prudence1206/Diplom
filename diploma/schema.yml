openapi: 3.0.3
info:
  title: DiplomaShopAPI
  version: 1.0.0
  description: API for DiplomaShopAPI
paths:
  /activate/{uidb64}/token={token}/:
    get:
      operationId: activate_token=_retrieve
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - activate
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: activate_token=_create
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - activate
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/partner/file_update:
    post:
      operationId: api_v1_partner_file_update_create
      description: |-
        Класс для обновления прайса от поставщикаc
        Только если есть файл прайса в папке data
        Только если пользователь зарегестрировал за собой Магазин

        POST / api / v1 / partner / file_update

        {
            "token": "76b06cbb9092619efc7fe9f08bbad327ea36a888",
            "filename": "shop1.yaml"
        }
        "все изменения внесены или созданы"

        {
            "token": "76b06cbb9092619efc7fe9f08bbad327ea36a888",
            "filename": "shop2.yaml"
        }
         'Магазина не существует'
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/partner/orders:
    get:
      operationId: api_v1_partner_orders_retrieve
      description: |-
        Класс для поиска всех товаров в заказе для конкретного магазина
        с использованием фильтра по номеру заказа
        http://127.0.0.1:8000/api/v1/partner/orders?order=2?status="paid"
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/partner/update:
    post:
      operationId: api_v1_partner_update_create
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/products/:
    get:
      operationId: api_v1_products_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductGet'
          description: ''
    post:
      operationId: api_v1_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductGet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductGet'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGet'
          description: ''
  /api/v1/products/{id}/:
    get:
      operationId: api_v1_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Информация о продукте.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGet'
          description: ''
    put:
      operationId: api_v1_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Информация о продукте.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductGet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductGet'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGet'
          description: ''
    patch:
      operationId: api_v1_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Информация о продукте.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductGet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductGet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductGet'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGet'
          description: ''
    delete:
      operationId: api_v1_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Информация о продукте.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/order_data:
    get:
      operationId: api_v1_user_order_data_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /categories:
    get:
      operationId: categories_list
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /order/payed/{uidb64}/token={token}/order={order}:
    get:
      operationId: order_payed_token=_order=_retrieve
      parameters:
      - in: path
        name: order
        schema:
          type: string
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - order
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /shops:
    get:
      operationId: shops_retrieve
      tags:
      - shops
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: shops_create
      tags:
      - shops
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user/basket/uprove:
    get:
      operationId: user_basket_uprove_retrieve
      description: класс для подтверждения заказа
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: user_basket_uprove_create
      description: класс для подтверждения заказа
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user/get_token/:
    get:
      operationId: user_get_token_retrieve
      description: |-
        класс определения токен-ключа
        при запросе проверяет тип пользователя, если магазон, то выдает/создает токен пользователю
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
    post:
      operationId: user_get_token_create
      description: |-
        класс определения токен-ключа
        при запросе проверяет тип пользователя, если магазон, то выдает/создает токен пользователю
      tags:
      - user
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /user/password_change/:
    get:
      operationId: user_password_change_retrieve
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: user_password_change_create
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 100
      required:
      - id
      - name
    PatchedProductGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 100
        product:
          allOf:
          - $ref: '#/components/schemas/ProductGetProduct'
          readOnly: true
        shop:
          allOf:
          - $ref: '#/components/schemas/ShopName'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Количество
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Стоимость
        price_rrc:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Стоимость без скидки
        product_parameters:
          type: array
          items:
            $ref: '#/components/schemas/ProductParameter'
          readOnly: true
    ProductGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 100
        product:
          allOf:
          - $ref: '#/components/schemas/ProductGetProduct'
          readOnly: true
        shop:
          allOf:
          - $ref: '#/components/schemas/ShopName'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Количество
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Стоимость
        price_rrc:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Стоимость без скидки
        product_parameters:
          type: array
          items:
            $ref: '#/components/schemas/ProductParameter'
          readOnly: true
      required:
      - id
      - name
      - price
      - price_rrc
      - product
      - product_parameters
      - quantity
      - shop
    ProductGetProduct:
      type: object
      properties:
        name:
          type: string
          title: Название
          maxLength: 100
        category:
          type: string
          readOnly: true
      required:
      - category
      - name
    ProductParameter:
      type: object
      properties:
        parameter:
          type: string
          readOnly: true
        value:
          type: string
          title: Значение
          maxLength: 100
      required:
      - parameter
      - value
    ShopName:
      type: object
      properties:
        name:
          type: string
          readOnly: true
      required:
      - name
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
